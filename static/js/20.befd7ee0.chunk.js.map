{"version":3,"sources":["views/trailer/trailer.tsx","hooks/useInViewport.ts","hooks/useUniqueId.ts","components/scrollable/scrollable.tsx","components/seo/seo.tsx","components/button/button.tsx","hooks/useChangebleState.ts","components/checkbox/checkbox.tsx","components/spotlightContainer/spotlightContainer.tsx","hooks/useThrottledCallback.ts","components/accordion/accordion.tsx","utils/date.ts","utils/video.ts","components/radio/radio.tsx","components/select/select.tsx","hooks/useHashTrigger.ts","components/popup/popup.tsx","utils/subtitles.ts","components/media/media.new.tsx","components/player/settings.tsx","components/player/startFrom.tsx","components/player/player.tsx"],"names":["TrailerView","history","useHistory","useLocation","state","item","trailer","playerProps","useMemo","title","description","poster","posters","wide","big","sources","mapSources","handleOnEnded","useCallback","goBack","onEnded","useInViewport","target","props","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","useUniqueId","prefix","uid","useUID","ScrollableContext","createContext","Scrollable","children","className","onScrollToEnd","footerRef","id","value","cx","Provider","ref","Seo","Helmet","defaultTitle","titleTemplate","Button","icon","iconOnly","autoFocus","wrapperRef","frameId","requestAnimationFrame","focus","cancelAnimationFrame","role","name","useChangebleState","initialState","setState","Checkbox","defaultChecked","checked","onChange","inputRef","handleChange","e","handleKeyPress","isKey","click","component","onKeyPress","type","SpotlightContainer","SpotlightContainerDecorator","enterTo","defaultElement","selector","overflow","preserveId","useThrottledCallback","func","wait","useBaseThrottledCallback","Accordion","open","onToggle","subtitle","visible","setVisible","handleClick","newVisible","handleClickThrottled","onClick","secondsToDuration","seconds","formatDuration","leading","formatIdx","idx","mapAudios","audios","ac3ByDefault","savedAudioName","map","audio","filter","author","toUpper","lang","codec","join","number","default","files","streamingType","savedSourceName","orderBy","file","src","url","http","quality","includes","parseInt","mapSubtitles","subtitles","forcedByDefault","savedSubtitleName","forced","Radio","Select","label","defaultValue","closeOnChange","splitIn","setOpen","val","setVal","opts","Array","isArray","option","selectedOption","find","o","handleChanged","handleChecked","opt","useHashTrigger","hash","onClose","onOpen","hasHash","location","push","search","pathname","close","timeoutId","setTimeout","clearTimeout","Popup","closeButton","containerId","Spotlight","add","handleClose","handleCloseIfVisible","spotPopupContent","getCurrent","blur","setActiveContainer","setPointerMode","useButtonEffect","hashTrigger","hidden","spotlightId","spotlightRestrict","spotlightDisabled","WebVTTConverter","resource","objectURL","this","Promise","resolve","reject","reader","FileReader","addEventListener","event","buf","result","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","then","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","forEach","each","charCodeAt","from","a","fetch","converter","getURL","useVideoPlayer","autoPlay","audioTracks","sourceTracks","subtitleTracks","isSettingsOpen","onAudioChange","onSourceChange","onSubtitleChange","videoRef","hlsRef","startTimeRef","isSettingsOpenRef","isLoaded","setIsLoaded","useStorageState","isHLSJSActive","audioTrack","currentAudioTrack","setCurrentAudioTrack","sourceTrack","currentSourceTrack","setCurrentSourceTrack","subtitleTrack","currentSubtitleTrack","setCurrentSubtitleTrack","getAudioTracks","getAudioTrack","setAudioTrack","audioTrackName","audioTrackIndex","findIndex","getSourceTracks","uniqBy","getSourceTrack","setSourceTrack","sourceTrackName","sourceTrackIndex","getSubtitleTracks","getSubtitleTrack","setSubtitleTrack","subtitleTrackName","subtitleTrackIndex","currentAudioTrackIndex","currentSrc","handleMediaLoaded","removeEventListener","currentTime","pause","play","HLS","isSupported","hls","enableWebVTT","enableCEA708Captions","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","destroy","hlsAudioTrack","enabled","firstChild","lastChild","track","mode","removeChild","addSubtitleTrack","document","createElement","appendChild","kind","srclang","endsWith","convertToVTT","Boolean","MEDIA_EVENTS","Media","React","forwardRef","onUpdate","mediaComponent","handleUpdate","eventProps","reduce","args","player","getCurrentTime","setCurrentTime","getPlaybackRate","playbackRate","setPlaybackRate","getPaused","paused","getDuration","duration","getError","networkState","NETWORK_NO_SOURCE","getLoading","readyState","HAVE_ENOUGH_DATA","getProportionLoaded","buffered","length","end","getProportionPlayed","playPause","load","api","useImperativeHandle","useVideoPlayerApi","NONE","Settings","isOpen","setIsOpen","setAudios","currentAudio","setCurrentAudio","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","audioOptions","sourceOptions","source","subtitleOptions","handleVideoUpdate","getVideoNode","handleAudioChange","handleSourceChange","handleSubtitleChange","video","StartFrom","startTime","startInDelay","startIn","setStartIn","startFrom","handleStartFromClick","handleStartFromBeginingClick","intervalId","setInterval","prevStartIn","newStartIn","clearInterval","Player","timeSyncInterval","onPlay","onPause","onTimeSync","playerRef","isPaused","setIsPaused","setIsSettingsOpen","handlePlay","handlePause","handleEnded","handleTimeSync","handleLoadedMetadata","handleSettingsOpen","handleSettingsClose","handlePauseButton","locale","jumpBy","onLoadedMetadata","videoComponent"],"mappings":"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","file":"static/js/20.befd7ee0.chunk.js","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { ItemDetails, Trailer } from 'api';\nimport Player, { PlayerProps } from 'components/player';\nimport Seo from 'components/seo';\n\nimport { mapSources } from 'utils/video';\n\nconst TrailerView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ item: ItemDetails; trailer: Trailer }>();\n  const { item, trailer } = location.state || {};\n\n  const playerProps = useMemo<PlayerProps>(() => {\n    return {\n      title: item.title,\n      description: 'Трейлер',\n      poster: item.posters.wide || item.posters.big,\n      sources: mapSources([trailer]),\n    };\n  }, [item, trailer]);\n\n  const handleOnEnded = useCallback(() => {\n    history.goBack();\n  }, [history]);\n\n  return (\n    <>\n      <Seo title={`Просмотр: ${item.title} - Трейлер`} />\n      <Player {...playerProps} onEnded={handleOnEnded} />\n    </>\n  );\n};\n\nexport default TrailerView;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useMemo } from 'react';\nimport { useUID } from 'react-uid';\n\nfunction useUniqueId(prefix: string) {\n  const uid = useUID();\n  const id = useMemo(() => `${prefix}-${uid}`, [prefix, uid]);\n\n  return id;\n}\n\nexport default useUniqueId;\n","import { createContext, useMemo, useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\nimport useUniqueId from 'hooks/useUniqueId';\n\nexport const ScrollableContext = createContext<{ id?: string }>({});\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n  const id = useUniqueId('scrollable');\n  const value = useMemo(\n    () => ({\n      id,\n    }),\n    [id],\n  );\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props} id={id}>\n      <ScrollableContext.Provider value={value}>{children}</ScrollableContext.Provider>\n      {onScrollToEnd && <div className=\"h-40\" ref={footerRef} />}\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.ComponentProps<typeof Spottable>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useEffect, useState } from 'react';\n\nfunction useChangebleState<T>(initialState?: T) {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return [state, setState] as const;\n}\n\nexport default useChangebleState;\n","import { useCallback, useRef } from 'react';\nimport React from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\nimport { isKey } from 'utils/keyboard';\n\nexport type CheckboxProps = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<CheckboxProps> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n  const handleKeyPress = useCallback((e: KeyboardEvent) => {\n    if (isKey(e, 'Enter')) {\n      inputRef.current?.click();\n    }\n  }, []);\n\n  return (\n    <Spottable\n      component=\"label\"\n      className={cx('text-gray-200 p-2', className)}\n      // @ts-expect-error\n      onKeyPress={handleKeyPress}\n      role=\"button\"\n    >\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          {...props}\n          ref={inputRef}\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\n\nexport const CONFIG = {\n  enterTo: 'default-element',\n  defaultElement: '.spottable',\n  selector: '.spottable',\n  overflow: true,\n  preserveId: true,\n};\n\nconst SpotlightContainer = SpotlightContainerDecorator(CONFIG, (props: React.HTMLAttributes<HTMLDivElement>) => <div {...props} />);\n\nexport default SpotlightContainer;\n","import { useThrottledCallback as useBaseThrottledCallback } from 'use-debounce';\nimport type { CallOptions } from 'use-debounce/lib/useDebouncedCallback';\n\nfunction useThrottledCallback<T extends (...args: any[]) => ReturnType<T>>(func: T, wait: number = 500, options?: CallOptions) {\n  return useBaseThrottledCallback(func, wait, options);\n}\n\nexport default useThrottledCallback;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\nimport Text from 'components/text';\nimport useChangebleState from 'hooks/useChangebleState';\nimport useThrottledCallback from 'hooks/useThrottledCallback';\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className?: string;\n  open?: boolean;\n  onToggle?: (open: boolean) => void;\n};\n\nconst Accordion: React.FC<Props> = ({ open, onToggle, title, subtitle, className, children }) => {\n  const [visible, setVisible] = useChangebleState(open);\n\n  const handleClick = useCallback(() => {\n    const newVisible = !visible;\n    onToggle?.(newVisible);\n    setVisible(newVisible);\n  }, [visible, setVisible, onToggle]);\n\n  const handleClickThrottled = useThrottledCallback(handleClick);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Spottable onClick={handleClickThrottled} className={cx('p-1 cursor-pointer', className)}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center\">\n            <Text>{title}</Text>\n\n            <Icon name={visible ? 'expand_less' : 'expand_more'} />\n          </div>\n          {!visible && subtitle && <Text className=\"mt-2\">{subtitle}</Text>}\n        </div>\n      </Spottable>\n      {visible && children}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import formatDuration from 'format-duration';\n\nexport function secondsToDuration(seconds?: number) {\n  return formatDuration((seconds || 0) * 1000, { leading: true });\n}\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport orderBy from 'lodash/orderBy';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[], ac3ByDefault?: boolean, savedAudioName?: string): AudioTrack[] {\n  return map(audios, (audio, idx) => {\n    const name = filter([\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec === 'ac3' && toUpper(audio.codec),\n    ]).join(' ');\n    const number = `${formatIdx(idx + 1)}.`;\n\n    return {\n      name,\n      number,\n      lang: audio.lang,\n      default: (savedAudioName && savedAudioName === name) || (!savedAudioName && ac3ByDefault && audio.codec === 'ac3'),\n    };\n  });\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n  savedSourceName?: string,\n): SourceTrack[] {\n  return orderBy(\n    map(files, (file) => {\n      const src = (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http!) as string;\n      const name = file.quality!;\n\n      return {\n        src,\n        name,\n        type: src.includes('.m3u8') ? 'application/x-mpegURL' : 'video/mp4',\n        default: savedSourceName === name,\n      };\n    }),\n    ({ name }) => parseInt(name),\n    'desc',\n  );\n}\n\nexport function mapSubtitles(subtitles: Subtitle[], forcedByDefault?: boolean, savedSubtitleName?: string): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => {\n    const name = `${toUpper(subtitle.lang)}${subtitle.forced ? ' Forced' : ''}`;\n    const number = `${formatIdx(idx + 1)}.`;\n\n    return {\n      name,\n      number,\n      src: subtitle.url,\n      lang: subtitle.lang,\n      default:\n        (savedSubtitleName && savedSubtitleName === name) ||\n        (!savedSubtitleName && forcedByDefault && subtitle.forced && subtitle.lang === 'rus'),\n    };\n  });\n}\n","import React from 'react';\n\nimport Checkbox, { CheckboxProps } from 'components/checkbox';\n\ntype Props = {} & CheckboxProps;\n\nconst Radio: React.FC<Props> = (props) => {\n  return <Checkbox {...props} type=\"radio\" />;\n};\n\nexport default Radio;\n","import { useCallback, useMemo, useState } from 'react';\nimport map from 'lodash/map';\n\nimport Accordion from 'components/accordion';\nimport Radio from 'components/radio';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Option<T = any> = {\n  title: string;\n  value: T;\n};\n\ntype Props<T = any> = {\n  label: string;\n  options: Option<T>[] | string[];\n  value?: T;\n  defaultValue?: T;\n  onChange?: (value: T) => void;\n  closeOnChange?: boolean;\n  className?: string;\n  splitIn?: 2 | 3 | 4 | 5 | 6;\n};\n\nconst Select: React.FC<Props> = ({ label, options, defaultValue, value, onChange, closeOnChange, className, splitIn }) => {\n  const [open, setOpen] = useState(false);\n  const [val, setVal] = useChangebleState(value || defaultValue);\n  const opts = useMemo(\n    () =>\n      Array.isArray(options) ? options.map((option, idx) => (typeof option === 'string' ? { title: option, value: idx } : option)) : [],\n    [options],\n  );\n  const selectedOption = useMemo(() => opts.find((o) => o.value === val), [opts, val]);\n\n  const handleChanged = useCallback(\n    (value) => {\n      setVal(value);\n      onChange?.(value);\n\n      if (closeOnChange) {\n        setOpen(false);\n      }\n    },\n    [setVal, onChange, closeOnChange],\n  );\n  const handleChecked = useCallback(\n    (option: Option) => (checked: boolean) => {\n      if (checked) {\n        handleChanged(option.value);\n      }\n    },\n    [handleChanged],\n  );\n\n  return (\n    <Accordion open={open} onToggle={setOpen} title={label} subtitle={selectedOption?.title} className={className}>\n      <div className=\"flex flex-wrap\">\n        {map(opts, (opt) => (\n          <Radio\n            key={opt.value}\n            className={splitIn ? `w-1/${splitIn}` : 'w-full'}\n            checked={opt.value === val}\n            onChange={handleChecked(opt)}\n          >\n            {opt.title}\n          </Radio>\n        ))}\n      </div>\n    </Accordion>\n  );\n};\n\nexport default Select;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction useHashTrigger(hash: string, onClose?: Function, onOpen?: Function) {\n  const history = useHistory();\n  const hasHash = useCallback(() => history.location.hash.includes(hash), [hash, history]);\n\n  const open = useCallback(() => {\n    if (!hasHash()) {\n      history.push({\n        hash,\n        state: history.location.state,\n        search: history.location.search,\n        pathname: history.location.pathname,\n      });\n    }\n    onOpen?.();\n  }, [hash, hasHash, history, onOpen]);\n\n  const close = useCallback(() => {\n    if (hasHash()) {\n      history.goBack();\n    }\n    onClose?.();\n  }, [hasHash, history, onClose]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (hasHash()) {\n        open();\n      } else {\n        close();\n      }\n    }, 100);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [hasHash, open, close, history.location.hash]);\n\n  return useMemo(\n    () => ({\n      open,\n      close,\n    }),\n    [open, close],\n  );\n}\n\nexport default useHashTrigger;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport Spotlight from '@enact/spotlight';\nimport cx from 'classnames';\n\nimport Scrollable from 'components/scrollable';\nimport SpotlightContainer from 'components/spotlightContainer';\nimport useButtonEffect, { KeyboardCodesKeys } from 'hooks/useButtonEffect';\nimport useHashTrigger from 'hooks/useHashTrigger';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  closeButton?: KeyboardCodesKeys;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Popup: React.FC<Props> = ({ visible, onClose, children, className, closeButton = 'Blue', ...props }) => {\n  const containerId = useMemo(() => Spotlight.add({}), []);\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleCloseIfVisible = useCallback(() => {\n    if (visible) {\n      handleClose();\n\n      return false;\n    }\n  }, [visible, handleClose]);\n\n  const spotPopupContent = useCallback(() => {\n    if (!Spotlight.focus(containerId)) {\n      const current = Spotlight.getCurrent();\n\n      // In cases where the container contains no spottable controls or we're in pointer-mode, focus\n      // cannot inherently set the active container or blur the active control, so we must do that\n      // here.\n      if (current) {\n        // @ts-expect-error\n        current.blur();\n      }\n\n      Spotlight.setActiveContainer(containerId);\n      setTimeout(() => {\n        Spotlight.setPointerMode(false);\n        Spotlight.focus(containerId);\n      }, 500);\n    }\n  }, [containerId]);\n\n  useButtonEffect('Back', handleCloseIfVisible);\n  useButtonEffect(closeButton, handleCloseIfVisible);\n  const hashTrigger = useHashTrigger('popup', handleCloseIfVisible);\n\n  useEffect(() => {\n    if (visible) {\n      spotPopupContent();\n      hashTrigger.open();\n    } else {\n      hashTrigger.close();\n    }\n  }, [visible, spotPopupContent, hashTrigger]);\n\n  return (\n    <>\n      <div\n        className={cx('fixed z-999 top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50', {\n          hidden: !visible,\n        })}\n        onClick={handleClose}\n      />\n      <SpotlightContainer\n        {...props}\n        spotlightId={containerId}\n        spotlightRestrict=\"self-only\"\n        spotlightDisabled={!visible}\n        className={cx(\n          'fixed z-999 bottom-0 left-0 right-0 p-4 bg-black ring',\n          {\n            hidden: !visible,\n          },\n          className,\n        )}\n      >\n        <Scrollable className=\"max-h-screen\">{children}</Scrollable>\n      </SpotlightContainer>\n    </>\n  );\n};\n\nexport default Popup;\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport HLS from 'hls.js';\nimport forEach from 'lodash/forEach';\nimport uniqBy from 'lodash/uniqBy';\n\nimport useStorageState from 'hooks/useStorageState';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  number: string;\n  lang: string;\n  default?: boolean;\n};\n\nexport type SourceTrack = {\n  src: string;\n  type: string;\n  name: string;\n  default?: boolean;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  number: string;\n  lang: string;\n  default?: boolean;\n};\n\nexport type StreamingType = 'http' | 'hls' | 'hls2' | 'hls4';\n\ntype OwnProps = {\n  autoPlay?: boolean;\n  audioTracks?: AudioTrack[];\n  sourceTracks?: SourceTrack[];\n  subtitleTracks?: SubtitleTrack[];\n  streamingType?: StreamingType;\n  isSettingsOpen?: boolean;\n  mediaComponent?: string;\n  onUpdate?: () => void;\n  onAudioChange?: (audioTrack: AudioTrack) => void;\n  onSourceChange?: (sourceTrack: SourceTrack) => void;\n  onSubtitleChange?: (subtitleTrack: SubtitleTrack | null) => void;\n};\n\nexport type MediaRef = {\n  play: () => Promise<void>;\n  pause: () => void;\n  playPause: () => Promise<void>;\n  load: () => void;\n  currentTime: number;\n  playbackRate: number;\n  audioTracks?: AudioTrack[];\n  audioTrack?: string;\n  sourceTracks?: SourceTrack[];\n  sourceTrack?: string;\n  subtitleTracks?: SubtitleTrack[];\n  subtitleTrack?: string;\n  readonly duration: number;\n  readonly error: boolean;\n  readonly loading: boolean;\n  readonly paused: boolean;\n  readonly proportionLoaded: number;\n  readonly proportionPlayed: number;\n};\n\nfunction useVideoPlayer({\n  autoPlay,\n  audioTracks,\n  sourceTracks,\n  subtitleTracks,\n  streamingType,\n  isSettingsOpen,\n  onAudioChange,\n  onSourceChange,\n  onSubtitleChange,\n}: OwnProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const hlsRef = useRef<HLS | null>(null);\n  const startTimeRef = useRef(0);\n  const isSettingsOpenRef = useRef(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isHLSJSActive] = useStorageState<boolean>('is_hls.js_active');\n  const [currentAudioTrack, setCurrentAudioTrack] = useState<AudioTrack>(\n    () => (audioTracks?.find((audioTrack) => audioTrack.default) || audioTracks?.[0])!,\n  );\n  const [currentSourceTrack, setCurrentSourceTrack] = useState<SourceTrack>(\n    () => (sourceTracks?.find((sourceTrack) => sourceTrack.default) || sourceTracks?.[0])!,\n  );\n  const [currentSubtitleTrack, setCurrentSubtitleTrack] = useState<SubtitleTrack | null>(\n    () => subtitleTracks?.find((subtitleTrack) => subtitleTrack.default) || null,\n  );\n\n  const getAudioTracks = useCallback(() => (streamingType === 'hls2' ? [] : audioTracks), [audioTracks, streamingType]);\n  const getAudioTrack = useCallback(() => currentAudioTrack?.name, [currentAudioTrack]);\n  const setAudioTrack = useCallback(\n    (audioTrackName: string) => {\n      const audioTrackIndex = audioTracks?.findIndex((audioTrack) => audioTrack.name === audioTrackName) ?? -1;\n      if (audioTrackIndex !== -1) {\n        const audioTrack = audioTracks![audioTrackIndex];\n        setCurrentAudioTrack(audioTrack);\n        onAudioChange?.(audioTrack);\n      }\n    },\n    [audioTracks, onAudioChange],\n  );\n  const getSourceTracks = useCallback(() => uniqBy(sourceTracks, 'src'), [sourceTracks]);\n  const getSourceTrack = useCallback(() => currentSourceTrack?.name, [currentSourceTrack]);\n  const setSourceTrack = useCallback(\n    (sourceTrackName: string) => {\n      const sourceTrackIndex = sourceTracks?.findIndex((sourceTrack) => sourceTrack.name === sourceTrackName) ?? -1;\n      if (sourceTrackIndex !== -1) {\n        const sourceTrack = sourceTracks![sourceTrackIndex];\n        setCurrentSourceTrack(sourceTrack);\n        onSourceChange?.(sourceTrack);\n      }\n    },\n    [sourceTracks, onSourceChange],\n  );\n  const getSubtitleTracks = useCallback(() => subtitleTracks, [subtitleTracks]);\n  const getSubtitleTrack = useCallback(() => currentSubtitleTrack?.name, [currentSubtitleTrack]);\n  const setSubtitleTrack = useCallback(\n    (subtitleTrackName?: string) => {\n      const subtitleTrackIndex = subtitleTracks?.findIndex((subtitleTrack) => subtitleTrack.name === subtitleTrackName) ?? -1;\n\n      const subtitleTrack = (subtitleTrackIndex !== -1 && subtitleTracks![subtitleTrackIndex]) || null;\n      setCurrentSubtitleTrack(subtitleTrack);\n      onSubtitleChange?.(subtitleTrack);\n    },\n    [subtitleTracks, onSubtitleChange],\n  );\n\n  const currentAudioTrackIndex = useMemo(\n    () => audioTracks?.findIndex((audioTrack) => audioTrack.name === currentAudioTrack.name) ?? 0,\n    [audioTracks, currentAudioTrack],\n  );\n  const currentSrc = useMemo(\n    () =>\n      streamingType === 'hls'\n        ? currentSourceTrack?.src.replace(/master-v1a\\d/, `master-v1a${currentAudioTrackIndex + 1}`)\n        : currentSourceTrack?.src,\n    [streamingType, currentAudioTrackIndex, currentSourceTrack?.src],\n  );\n\n  const handleMediaLoaded = useCallback(() => {\n    if (videoRef.current) {\n      setIsLoaded(true);\n      videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n\n      if (startTimeRef.current > 0) {\n        videoRef.current.currentTime = startTimeRef.current;\n\n        if (isSettingsOpenRef.current) {\n          videoRef.current.pause();\n        } else {\n          videoRef.current.play();\n        }\n      } else if (autoPlay && !isSettingsOpenRef.current) {\n        videoRef.current.play();\n      }\n    }\n  }, [autoPlay]);\n\n  useEffect(() => {\n    if (videoRef.current && currentSrc) {\n      if (isHLSJSActive !== false && currentSrc.includes('.m3u8') && HLS.isSupported()) {\n        const hls = (hlsRef.current = new HLS({\n          enableWebVTT: false,\n          enableCEA708Captions: false,\n        }));\n        hls.attachMedia(videoRef.current);\n        hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n          hls.loadSource(currentSrc);\n        });\n      } else {\n        videoRef.current.src = currentSrc;\n      }\n\n      setIsLoaded(false);\n      videoRef.current.addEventListener('canplay', handleMediaLoaded);\n    }\n\n    return () => {\n      if (videoRef.current) {\n        if (videoRef.current.currentTime > 0) {\n          // eslint-disable-next-line\n          startTimeRef.current = videoRef.current.currentTime;\n        }\n        // eslint-disable-next-line\n        videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n      }\n      if (hlsRef.current) {\n        hlsRef.current.destroy();\n        hlsRef.current = null;\n      }\n    };\n  }, [currentSrc, isHLSJSActive, handleMediaLoaded]);\n\n  useEffect(() => {\n    if (isLoaded) {\n      if (hlsRef.current) {\n        const hlsAudioTrack = hlsRef.current.audioTracks?.[currentAudioTrackIndex];\n\n        if (hlsAudioTrack) {\n          hlsRef.current.audioTrack = hlsAudioTrack.id;\n        }\n      } else if (videoRef.current) {\n        // Do not change audio if we don't have it (mostly on HLS)\n        // @ts-expect-error\n        if (videoRef.current.audioTracks?.[currentAudioTrackIndex]) {\n          // @ts-expect-error\n          forEach(videoRef.current.audioTracks, (audioTrack, idx: number) => {\n            audioTrack.enabled = idx === currentAudioTrackIndex;\n          });\n\n          videoRef.current.currentTime -= 1;\n        }\n      }\n    }\n  }, [isLoaded, currentAudioTrackIndex]);\n\n  useEffect(() => {\n    if (isLoaded) {\n      if (videoRef.current) {\n        // clear existing subtitles\n        while (videoRef.current.firstChild) {\n          // @ts-expect-error\n          videoRef.current.lastChild.track.mode = 'disabled';\n          videoRef.current.removeChild(videoRef.current.lastChild!);\n        }\n\n        if (currentSubtitleTrack) {\n          const addSubtitleTrack = (src: string) => {\n            if (videoRef.current) {\n              const track = document.createElement('track');\n              videoRef.current.appendChild(track);\n\n              track.src = src;\n              track.kind = 'captions';\n              track.id = currentSubtitleTrack.name;\n              track.label = currentSubtitleTrack.name;\n              track.srclang = currentSubtitleTrack.lang;\n\n              track.track.mode = 'showing';\n            }\n          };\n\n          if (currentSubtitleTrack.src.endsWith('.srt')) {\n            convertToVTT(currentSubtitleTrack.src).then(addSubtitleTrack);\n          } else {\n            addSubtitleTrack(currentSubtitleTrack.src);\n          }\n        }\n      }\n    }\n  }, [isLoaded, currentSubtitleTrack]);\n\n  useEffect(() => {\n    isSettingsOpenRef.current = Boolean(isSettingsOpen);\n  }, [isSettingsOpen]);\n\n  return useMemo(\n    () => ({\n      videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    }),\n    [\n      videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    ],\n  );\n}\n\nfunction useVideoPlayerApi(ref: React.ForwardedRef<MediaRef>, props: OwnProps) {\n  const player = useVideoPlayer(props);\n  const videoRef = player.videoRef;\n\n  const getCurrentTime = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime;\n    }\n    return 0;\n  }, [videoRef]);\n  const setCurrentTime = useCallback(\n    (currentTime: number) => {\n      if (videoRef.current) {\n        videoRef.current.currentTime = currentTime;\n      }\n    },\n    [videoRef],\n  );\n  const getPlaybackRate = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.playbackRate;\n    }\n    return 1;\n  }, [videoRef]);\n  const setPlaybackRate = useCallback(\n    (playbackRate: number) => {\n      if (videoRef.current) {\n        videoRef.current.playbackRate = playbackRate;\n      }\n    },\n    [videoRef],\n  );\n  const getPaused = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.paused;\n    }\n    return false;\n  }, [videoRef]);\n  const getDuration = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const getError = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.networkState === videoRef.current.NETWORK_NO_SOURCE;\n    }\n    return false;\n  }, [videoRef]);\n  const getLoading = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.readyState < videoRef.current.HAVE_ENOUGH_DATA;\n    }\n    return true;\n  }, [videoRef]);\n  const getProportionLoaded = useCallback(() => {\n    if (videoRef.current) {\n      return (\n        videoRef.current.buffered.length && videoRef.current.buffered.end(videoRef.current.buffered.length - 1) / videoRef.current.duration\n      );\n    }\n    return 0;\n  }, [videoRef]);\n  const getProportionPlayed = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime / videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const play = useCallback(async () => {\n    await videoRef.current?.play();\n  }, [videoRef]);\n  const pause = useCallback(() => {\n    videoRef.current?.pause();\n  }, [videoRef]);\n  const playPause = useCallback(async () => {\n    if (getPaused()) {\n      await play();\n    } else {\n      pause();\n    }\n  }, [play, pause, getPaused]);\n  const load = useCallback(() => {\n    videoRef.current?.load();\n  }, [videoRef]);\n\n  const api = useMemo<MediaRef>(\n    () => ({\n      play,\n      pause,\n      playPause,\n      load,\n      get currentTime() {\n        return getCurrentTime();\n      },\n      set currentTime(currentTime) {\n        setCurrentTime(currentTime);\n      },\n      get audioTracks() {\n        return player.getAudioTracks();\n      },\n      get audioTrack() {\n        return player.getAudioTrack();\n      },\n      set audioTrack(audioTrack) {\n        player.setAudioTrack(audioTrack);\n      },\n      get sourceTracks() {\n        return player.getSourceTracks();\n      },\n      get sourceTrack() {\n        return player.getSourceTrack();\n      },\n      set sourceTrack(sourceTrack) {\n        player.setSourceTrack(sourceTrack);\n      },\n      get subtitleTracks() {\n        return player.getSubtitleTracks();\n      },\n      get subtitleTrack() {\n        return player.getSubtitleTrack();\n      },\n      set subtitleTrack(subtitleTrack) {\n        player.setSubtitleTrack(subtitleTrack);\n      },\n      get playbackRate() {\n        return getPlaybackRate();\n      },\n      set playbackRate(playbackRate) {\n        setPlaybackRate(playbackRate);\n      },\n      get paused() {\n        return getPaused();\n      },\n      get duration() {\n        return getDuration();\n      },\n      get error() {\n        return getError();\n      },\n      get loading() {\n        return getLoading();\n      },\n      get proportionLoaded() {\n        return getProportionLoaded();\n      },\n      get proportionPlayed() {\n        return getProportionPlayed();\n      },\n    }),\n    [\n      player,\n      play,\n      pause,\n      playPause,\n      load,\n      getCurrentTime,\n      setCurrentTime,\n      getPlaybackRate,\n      setPlaybackRate,\n      getPaused,\n      getDuration,\n      getError,\n      getLoading,\n      getProportionLoaded,\n      getProportionPlayed,\n    ],\n  );\n\n  useImperativeHandle(ref, () => api, [api]);\n\n  return useMemo(\n    () => ({\n      api,\n      player,\n    }),\n    [api, player],\n  );\n}\n\nconst MEDIA_EVENTS = [\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onError',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n] as const;\n\ntype MediaEvents = keyof typeof MEDIA_EVENTS;\n\nexport type MediaProps = OwnProps & React.HTMLAttributes<HTMLVideoElement>;\n\nconst Media = React.forwardRef<MediaRef, MediaProps>(\n  (\n    {\n      autoPlay,\n      audioTracks,\n      sourceTracks,\n      subtitleTracks,\n      streamingType,\n      isSettingsOpen,\n      onUpdate,\n      onAudioChange,\n      onSourceChange,\n      onSubtitleChange,\n      className,\n      mediaComponent,\n      ...props\n    },\n    ref,\n  ) => {\n    const handleUpdate = useCallback(() => {\n      onUpdate?.();\n    }, [onUpdate]);\n    const eventProps = useMemo(\n      () =>\n        MEDIA_EVENTS.reduce<Partial<Record<MediaEvents, Function>>>(\n          (result, event) => ({\n            ...result,\n            [event]: (...args: any[]) => {\n              handleUpdate();\n              // @ts-expect-error\n              props[event]?.(...args);\n            },\n          }),\n          {},\n        ),\n      [props, handleUpdate],\n    );\n    const { player } = useVideoPlayerApi(ref, {\n      autoPlay,\n      audioTracks,\n      sourceTracks,\n      subtitleTracks,\n      streamingType,\n      isSettingsOpen,\n      onAudioChange,\n      onSourceChange,\n      onSubtitleChange,\n    });\n\n    return <video {...props} {...eventProps} autoPlay={false} className={cx('w-screen h-screen', className)} ref={player.videoRef} />;\n  },\n);\n\nexport default Media;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\n\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Popup from 'components/popup';\nimport Select from 'components/select';\n\nconst NONE = 'NONE';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ visible, onClose, player }) => {\n  const [isOpen, setIsOpen] = useState(visible);\n  const [audios, setAudios] = useState<AudioTrack[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<SourceTrack[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<SubtitleTrack[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(NONE);\n\n  const audioOptions = useMemo(() => map(audios, (audio) => ({ title: `${audio.number} ${audio.name}`, value: audio.name })), [audios]);\n  const sourceOptions = useMemo(() => map(sources, (source) => ({ title: source.name, value: source.name })), [sources]);\n  const subtitleOptions = useMemo(\n    () => [\n      { title: 'Нет', value: NONE },\n      ...map(subtitles, (subtitle) => ({ title: `${subtitle.number} ${subtitle.name}`, value: subtitle.name })),\n    ],\n    [subtitles],\n  );\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  useEffect(() => {\n    if (visible && player.current) {\n      const video: any = player.current.getVideoNode();\n      const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n      if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n        setAudios(audioTracks);\n        setCurrentAudio(audioTrack);\n\n        setSources(sourceTracks);\n        setCurrentSource(sourceTrack);\n\n        setSubtitles(subtitleTracks);\n        setCurrentSubtitle(subtitleTrack || NONE);\n      } else {\n        handleClose();\n      }\n    }\n  }, [visible, player, handleClose]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (visible) {\n      timeoutId = setTimeout(() => {\n        setIsOpen(true);\n      }, 100);\n    } else {\n      setIsOpen(false);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [visible]);\n\n  return (\n    <Popup visible={isOpen} onClose={handleClose}>\n      {audioOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Звук\"\n          value={currentAudio}\n          options={audioOptions}\n          onChange={handleAudioChange}\n          splitIn={2}\n          closeOnChange\n        />\n      )}\n      {sourceOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Качество\"\n          value={currentSource}\n          options={sourceOptions}\n          onChange={handleSourceChange}\n          splitIn={4}\n          closeOnChange\n        />\n      )}\n      {subtitleOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Субтитры\"\n          value={currentSubtitle}\n          options={subtitleOptions}\n          onChange={handleSubtitleChange}\n          splitIn={4}\n          closeOnChange\n        />\n      )}\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\nimport SpotlightContainer from 'components/spotlightContainer';\n\nimport { secondsToDuration } from 'utils/date';\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n  startTime?: number;\n  startInDelay?: number;\n};\n\nconst StartFrom: React.FC<Props> = ({ startTime, startInDelay = 5, player }) => {\n  const [visible, setVisible] = useState(true);\n  const [startIn, setStartIn] = useState(startInDelay);\n  const startFrom = useMemo(() => secondsToDuration(startTime), [startTime]);\n\n  const handleStartFromClick = useCallback(() => {\n    if (player.current) {\n      setVisible(false);\n      const video: any = player.current.getVideoNode();\n\n      video.currentTime = startTime;\n    }\n  }, [startTime, player]);\n  const handleStartFromBeginingClick = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (visible) {\n      intervalId = setInterval(() => {\n        setStartIn((prevStartIn) => {\n          const newStartIn = prevStartIn - 1;\n\n          if (newStartIn <= 0) {\n            handleStartFromClick();\n          }\n\n          return newStartIn;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [visible, handleStartFromClick]);\n\n  if (!startTime || !visible) {\n    return null;\n  }\n\n  return (\n    <SpotlightContainer spotlightRestrict=\"self-only\" className=\"flex justify-center absolute w-full z-101 bottom-32\">\n      <Button onClick={handleStartFromClick}>\n        Смотреть с {startFrom} через {startIn}\n      </Button>\n      <Button autoFocus onClick={handleStartFromBeginingClick}>\n        Смотреть с начала\n      </Button>\n    </SpotlightContainer>\n  );\n};\n\nexport default StartFrom;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\nimport Media, { AudioTrack, SourceTrack, StreamingType, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useButtonEffect from 'hooks/useButtonEffect';\n\nimport Settings from './settings';\nimport StartFrom from './startFrom';\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  streamingType?: StreamingType;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  streamingType,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [isPaused, setIsPaused] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n\n  const handlePlay = useCallback(() => {\n    setIsPaused(false);\n    setIsSettingsOpen(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setIsPaused(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n  const handleLoadedMetadata = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n  const handleSettingsOpen = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(true);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n  const handleSettingsClose = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(false);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.play();\n    }\n  }, []);\n  const handlePauseButton = useCallback(() => {\n    if (playerRef.current) {\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (isPaused) {\n      timeoutId = setTimeout(() => {\n        setIsPaused(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isPaused]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useButtonEffect('Back', handleTimeSync);\n  useButtonEffect('Blue', handleSettingsOpen);\n  useButtonEffect('Play', handleSettingsClose);\n  useButtonEffect('Pause', handlePauseButton);\n  useButtonEffect('ArrowUp', handleSettingsOpen);\n\n  return (\n    <>\n      <Settings visible={isSettingsOpen} onClose={handleSettingsClose} player={playerRef} />\n      {isPaused && <Text className=\"absolute z-10 top-0 p-4\">{title}</Text>}\n      {isPaused && (\n        <Button className=\"absolute z-101 bottom-8 right-10 text-blue-600\" icon=\"settings\" iconOnly onClick={handleSettingsOpen} />\n      )}\n      {isLoaded && startTime! > 0 && <StartFrom startTime={startTime} player={playerRef} />}\n\n      <VideoPlayer\n        {...props}\n        //@ts-expect-error\n        ref={playerRef}\n        locale=\"ru\"\n        poster={poster}\n        title={description}\n        jumpBy={15}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onEnded={handleEnded}\n        onLoadedMetadata={handleLoadedMetadata}\n        streamingType={streamingType}\n        isSettingsOpen={isSettingsOpen}\n        audioTracks={audios}\n        sourceTracks={sources}\n        subtitleTracks={subtitles}\n        videoComponent={<Media />}\n      />\n    </>\n  );\n};\n\nexport default Player;\n"],"sourceRoot":""}